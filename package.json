{
  "name": "moov-property-search",
  "version": "1.0.0",
  "description": "Property Search Platform with Flexible Import System",
  "private": true,
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:frontend\" \"npm run dev:embedding\"",
    "dev:api": "cd property-search-api && npm run dev",
    "dev:frontend": "cd property-search-frontend && npm run dev",
    "dev:embedding": "cd property-embedding-service && python src/main.py",
    "install:all": "npm install && cd property-search-api && npm install && cd ../property-search-frontend && npm install && cd ../property-embedding-service && pip install -r requirements.txt",
    "build": "npm run build:frontend && npm run build:api",
    "build:all": "cd property-search-api && npm run build && cd ../property-search-frontend && npm run build",
    "build:frontend": "cd property-search-frontend && npm run build",
    "build:api": "cd property-search-api && npm run build",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "npm run test:frontend:unit && npm run test:api:unit",
    "test:integration": "npm run test:api:integration",
    "test:e2e": "npm run test:frontend:e2e",
    "test:e2e:docker": "bash scripts/test-e2e-docker.sh",
    "test:e2e:docker:windows": "powershell -ExecutionPolicy Bypass -File scripts/test-e2e-docker.ps1",
    "test:coverage": "npm run test:frontend:coverage && npm run test:api:coverage",
    "test:watch": "concurrently \"npm run test:frontend:watch\" \"npm run test:api:watch\"",
    "test:frontend": "cd property-search-frontend && npm test -- --watchAll=false",
    "test:frontend:unit": "cd property-search-frontend && npm run test:unit",
    "test:frontend:coverage": "cd property-search-frontend && npm run test:coverage",
    "test:frontend:watch": "cd property-search-frontend && npm run test:watch",
    "test:frontend:e2e": "cd e2e-tests && npm run test",
    "test:api": "cd property-search-api && npm test",
    "test:api:unit": "cd property-search-api && npm run test",
    "test:api:integration": "cd property-search-api && npm run test:integration",
    "test:api:coverage": "cd property-search-api && npm run test:coverage",
    "test:api:watch": "cd property-search-api && npm run test:watch",
    "test:ai": "cd property-embedding-service && python -m pytest",
    "test:import": "cd property-search-api && python test_flexible_import.py",
    "test:tdd": "npm run test:tdd:frontend && npm run test:tdd:api",
    "test:tdd:frontend": "cd property-search-frontend && npm run test:tdd",
    "test:tdd:api": "cd property-search-api && npm run test:tdd",
    "test:tdd:watch": "concurrently \"npm run test:tdd:frontend:watch\" \"npm run test:tdd:api:watch\"",
    "test:tdd:frontend:watch": "cd property-search-frontend && npm run test:tdd:watch",
    "test:tdd:api:watch": "cd property-search-api && npm run test:tdd:watch",
    "test:semantic": "cd property-search-frontend && npm run test:semantic",
    "test:components": "cd property-search-frontend && npm run test:components",
    "lint": "npm run lint:frontend && npm run lint:api && npm run lint:ai",
    "lint:frontend": "cd property-search-frontend && npm run lint",
    "lint:api": "cd property-search-api && npm run lint",
    "lint:ai": "cd property-embedding-service && flake8 src/",
    "type-check": "npm run type-check:frontend && npm run type-check:api",
    "type-check:frontend": "cd property-search-frontend && npx tsc --noEmit",
    "type-check:api": "cd property-search-api && npx tsc --noEmit",
    "format": "npm run format:frontend && npm run format:api && npm run format:ai",
    "format:frontend": "cd property-search-frontend && npx prettier --write .",
    "format:api": "cd property-search-api && npx prettier --write .",
    "format:ai": "cd property-embedding-service && black src/ && isort src/",
    "clean": "rmdir /s /q node_modules & cd property-search-api && rmdir /s /q node_modules & cd ../property-search-frontend && rmdir /s /q node_modules",
    "clean:builds": "cd property-search-frontend && rmdir /s /q .next & cd ../property-search-api && rmdir /s /q dist",
    "ports": "netstat -ano | findstr \":3000 :3001 :8000\"",
    "kill-ports": "for /f \"tokens=5\" %a in ('netstat -ano ^| findstr :3000') do taskkill /f /pid %a & for /f \"tokens=5\" %b in ('netstat -ano ^| findstr :3001') do taskkill /f /pid %b & for /f \"tokens=5\" %c in ('netstat -ano ^| findstr :8000') do taskkill /f /pid %c",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "precommit": "npm run lint && npm run type-check && npm run test",
    "prepare": "husky install",
    "release": "npm run build && npm run test && git tag -a v$(npm version --json | jq -r '.version') -m 'Release v$(npm version --json | jq -r '.version')'",
    "deploy:staging": "echo 'Deploying to staging...' && npm run build && echo 'Staging deployment complete!'",
    "deploy:production": "echo 'Deploying to production...' && npm run build && echo 'Production deployment complete!'",
    "health-check": "curl -f http://localhost:3000/api/health && curl -f http://localhost:3001/health && curl -f http://localhost:8001/health",
    "validate:workflow": "node scripts/validate-workflow.js",
    "validate:e2e": "npm run validate:workflow && echo 'E2E integration validation complete!'"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "autoprefixer": "^10.4.21",
    "concurrently": "^8.2.2",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "husky": "^8.0.3",
    "js-yaml": "^4.1.0",
    "lint-staged": "^15.0.2",
    "postcss": "^8.5.6",
    "prettier": "^3.0.3",
    "tailwindcss": "^4.1.10",
    "typescript": "^5.0.0"
  },
  "workspaces": [
    "property-search-api",
    "property-search-frontend",
    "property-search-types"
  ]
}